#include <stdio.h>
#include <stdlib.h>
struct Node {
    int data;
    struct Node* next;
};
void insertAtBeginning(struct Node** head, int new_data) {
    struct Node* new_node=(struct Node*)malloc(sizeof(struct Node));
    new_node->data = new_data;
    new_node->next = *head;
    *head = new_node;
}
void deleteAtEnd(struct Node** head) {
    if (*head == NULL) {
        printf("List is empty.\n");
        return;
    }
    if ((*head)->next == NULL) {
        free(*head);
        *head = NULL;
        return;
    }
    struct Node* temp = *head;
    while (temp->next->next != NULL) {
        temp = temp->next;
    }
    struct Node* last = temp->next;
    temp->next = NULL;
    free(last);
}
void printList(struct Node* node) {
    while (node != NULL) {
        printf("%d->", node->data);
        node = node->next;
    }
    printf("\n");
}
int main() {
    struct Node* head = NULL;
    int value;
   printf("Enter values for the linked list (enter -2 to stop):\n");
    while (1) {
        scanf("%d", &value);
        if (value == -2) {
            break;
        }
        insertAtBeginning(&head, value);
    }
        deleteAtEnd(&head);
    printf("Output: ");
    printList(head);
    return 0;
}
