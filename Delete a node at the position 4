#include <stdio.h>
#include <stdlib.h>
struct Node {
    int data;
    struct Node* next;
};
void insertAtBeginning(struct Node** head, int new_data) {
    struct Node* new_node=(struct Node*)malloc(sizeof(struct Node));
    new_node->data = new_data;
    new_node->next = *head;
    *head = new_node;
}
void deleteAtPosition(struct Node** head, int position) {
    if (*head == NULL) {
        printf("List is empty.\n");
        return;
    }
    struct Node* temp = *head;
    if (position == 0) {
        *head = temp->next;  
        free(temp);  
        return;
    }
    for (int i = 0; temp != NULL && i < position - 1; i++) {
        temp = temp->next;
    }
    if (temp == NULL || temp->next == NULL) {
        printf("Position is out of range.\n");
        return;
    }
    struct Node* next = temp->next->next;
    free(temp->next); 
    temp->next = next;
}
void printList(struct Node* node) {
    while (node != NULL) {
        printf("%d->", node->data);
        node = node->next;
    }
    printf("NULL\n");
}
int main() {
    struct Node* head = NULL;
    int value;
   printf("Enter values for the linked list (enter -2 to stop):\n");
    while (1) {
        scanf("%d", &value);
        if (value == -2) {
            break;
        }
        insertAtBeginning(&head, value);
    }
    int positionToDelete = 4
    deleteAtPosition(&head, positionToDelete - 1); 
    printf("Output: ");
    printList(head);
    return 0;
}
