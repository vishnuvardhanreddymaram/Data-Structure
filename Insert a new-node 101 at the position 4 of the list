#include <stdio.h>
#include <stdlib.h>
struct Node {
    int data;
    struct Node* next;
};
void insertAtPosition(struct Node**head,int position,int new_data) {
  struct Node* new_node = (struct Node*)malloc(sizeof(struct Node));
    struct Node* current = *head;
    int i;
    new_node->data = new_data;
    new_node->next = NULL;
    if (position == 0) {
        new_node->next = *head;
        *head = new_node;
        return;
    }
    for (i = 0; current != NULL && i < position - 1; i++) {
        current = current->next;
    }
    if (current == NULL) {
        printf("Position %d is greater than the number of nodes in the list.\n", position);
        free(new_node);
        return;
    }
    new_node->next = current->next;
    current->next = new_node;
}
void insertAtBeginning(struct Node** head, int new_data) {
  struct Node* new_node = (struct Node*)malloc(sizeof(struct Node));
    new_node->data = new_data;
    new_node->next = *head;
    *head = new_node;
}
void printList(struct Node* node) {
    while (node != NULL) {
        printf("%d->", node->data);
        node = node->next;
    }
    printf("\n");
}
int main() {
    struct Node* head = NULL;
    int value;
 printf("Enter values for the linked list (enter -2 to stop):\n");
    while (1) {
        scanf("%d", &value);
        if (value == -2) {
            break;
        }
        insertAtBeginning(&head, value);
    }
    insertAtPosition(&head, 4, 101);
      printf("Input: ");
    printList(head);
    return 0;
}
