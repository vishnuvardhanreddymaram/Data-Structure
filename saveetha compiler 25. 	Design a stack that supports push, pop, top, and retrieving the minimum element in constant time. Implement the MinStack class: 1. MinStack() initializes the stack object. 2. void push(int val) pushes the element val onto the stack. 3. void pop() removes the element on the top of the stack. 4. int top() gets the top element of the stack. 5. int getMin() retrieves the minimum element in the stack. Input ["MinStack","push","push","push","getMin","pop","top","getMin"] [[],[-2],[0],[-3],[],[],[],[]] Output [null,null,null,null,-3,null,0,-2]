#include <stdio.h>
#include <limits.h>
#define MAX_SIZE 1000
typedef struct {
    int stack[MAX_SIZE];
    int minStack[MAX_SIZE];
    int top;
} MinStack;
void minStackInit(MinStack* obj) {
    obj->top = -1;
}
void push(MinStack* obj, int val) {
    obj->stack[++(obj->top)] = val;
    if (obj->top == 0 || val < obj->minStack[obj->top - 1]) {
        obj->minStack[obj->top] = val;
    } else {
        obj->minStack[obj->top] = obj->minStack[obj->top - 1];
    }
}
void pop(MinStack* obj) {
    obj->top--;
}
int top(MinStack* obj) {
    return obj->stack[obj->top];
}
int getMin(MinStack* obj) {
    return obj->minStack[obj->top];
}
int main() {
    MinStack minStack;
    minStackInit(&minStack);
    printf("null\n");
    push(&minStack, -2);
    printf("null\n");
    push(&minStack, 0);
    printf("null\n");
    push(&minStack, -3);
    printf("null\n");
    printf("%d\n", getMin(&minStack));
    pop(&minStack);
    printf("null\n");
    printf("%d\n", top(&minStack));
    printf("%d\n", getMin(&minStack));
    return 0;
}
