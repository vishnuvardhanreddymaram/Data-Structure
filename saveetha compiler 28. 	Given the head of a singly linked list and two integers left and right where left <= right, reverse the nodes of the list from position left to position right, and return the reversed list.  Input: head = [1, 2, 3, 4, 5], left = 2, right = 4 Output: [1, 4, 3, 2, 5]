#include <stdio.h>
#include <stdlib.h>
struct Node {
    int data;
    struct Node* next;
};
struct Node* createNode(int data) {
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    newNode->data = data;
    newNode->next = NULL;
    return newNode;
}
void printList(struct Node* head) {
    struct Node* temp = head;
    while (temp != NULL) {
        printf("%d ", temp->data);
        temp = temp->next;
    }
    printf("\n");
}
struct Node* reverseBetween(struct Node* head, int left, int right) {
    if (left == right) return head;

    struct Node dummy;
    dummy.next = head;
    struct Node* prev = &dummy;
    for (int i = 1; i < left; i++) {
        prev = prev->next;
    }

    struct Node* current = prev->next;
    struct Node* next = NULL;
    for (int i = 0; i < right - left; i++) {
        next = current->next;
        current->next = next->next;
        next->next = prev->next;
        prev->next = next;
    }
    return dummy.next;
}
int main() {
    struct Node* head = createNode(1);
    head->next = createNode(2);
    head->next->next = createNode(3);
    head->next->next->next = createNode(4);
    head->next->next->next->next = createNode(5);

    printf("Original List: ");
    printList(head);

    int left = 2, right = 4;
    head = reverseBetween(head, left, right);

    printf("Reversed List: ");
    printList(head);

    return 0;
}
