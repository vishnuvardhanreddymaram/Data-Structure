#include <stdio.h>
#include <stdlib.h>
struct Node {
    int data;
    struct Node* left;
    struct Node* right;
};
struct Node* createNode(int data) {
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    newNode->data = data;
    newNode->left = NULL;
    newNode->right = NULL;
    return newNode;
}
void inorder(struct Node* root, int* count, int k, int* result) {
    if (root == NULL || *count >= k) return;
    
    inorder(root->left, count, k, result);
    
    (*count)++;
    if (*count == k) {
        *result = root->data;
        return;
    }
    
    inorder(root->right, count, k, result);
}
int kthSmallest(struct Node* root, int k) {
    int count = 0;
    int result = -1;
    inorder(root, &count, k, &result);
    return result;
}
int main() {
    struct Node* root = createNode(20);
    root->left = createNode(8);
    root->right = createNode(22);
    root->left->left = createNode(4);
    root->left->right = createNode(12);
    root->left->right->left = createNode(10);
    root->left->right->right = createNode(14);

    int k = 3;
    int result = kthSmallest(root, k);
    
    printf("The %dth smallest element is %d\n", k, result);
    
    return 0;
}
